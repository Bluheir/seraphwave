buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath "com.github.johnrengelman:shadow:8.1.1"
    }
}

plugins {
    // Apply the scala plugin to add support for Scala
    id "scala"
}

group = "com.seraphwave"
version = "0.1"

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.21-R0.1-SNAPSHOT"

    implementation "org.scala-lang:scala3-library_3:3.4.2"

    implementation "org.http4s:http4s-core_3:0.23.16"
    implementation "org.http4s:http4s-dsl_3:0.23.16"
    implementation "org.http4s:http4s-blaze-server_3:0.23.16"
    implementation "org.http4s:http4s-circe_3:0.23.16"

    implementation "io.circe:circe-literal_3:0.14.9"
    implementation "io.circe:circe-generic_3:0.14.9"
    implementation "io.circe:circe-parser_3:0.14.9"

    implementation "org.typelevel:cats-core_3:2.12.0"
    implementation "org.typelevel:cats-effect_3:3.5.4"

    implementation "org.bouncycastle:bcpkix-jdk18on:1.78.1"
    implementation "org.bouncycastle:bcprov-jdk18on:1.78.1"
}


def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

task deleteBad(type: Delete) {
    delete "build/svelte-build"
}

task copySvelteClientFiles(type: Copy) {
    dependsOn deleteBad
    from ("../seraph-wave-gui/build")
    into ("build/svelte-build")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}
tasks.withType(ScalaCompile) {
  scalaCompileOptions.additionalParameters = [
    "-Wunused:imports"
  ]
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset "UTF-8"
    filesMatching(["plugin.yml", "config.yml"]) {
        expand props
    }
}
task shadowJar(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    // Ensure the task includes the main source set's output
    from(sourceSets.main.output)
    
    dependsOn(copySvelteClientFiles)
    from("build") {
        include "svelte-build/**"
    }

    // Include dependencies
    configurations = [project.configurations.runtimeClasspath]
    dependencies {
        exclude("org.spigotmc:spigot-api")
    }
}

tasks.build {
    dependsOn shadowJar
}